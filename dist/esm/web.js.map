{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAY5C,MAAM,cAAe,SAAQ,KAAK;IAGhC,YAAY,OAAe,EAAE,IAAkB;QAC7C,KAAK,CAAC,OAAO,CAAC,CAAC;QAHjB,SAAI,GAAiB,gBAAgB,CAAC;QAIpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAED,MAAM,OAAO,kBAAmB,SAAQ,SAAS;IAC/C,UAAU,CAAC,OAAwB;QACjC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,cAAc,CAAC,mCAAmC,EAAE,wBAAwB,CAAC,CAAC;IAC1F,CAAC;IAED,eAAe,CAAiB,cAAqC;QACnE,OAAO,CAAC,GAAG,CAAC,EAAE,cAAc,EAAE,CAAC,CAAC;QAChC,MAAM,IAAI,cAAc,CAAC,kCAAkC,EAAE,wBAAwB,CAAC,CAAC;IACzF,CAAC;IAED,eAAe,CAAC,MAAsB;QACpC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,MAAM,IAAI,cAAc,CAAC,mCAAmC,EAAE,wBAAwB,CAAC,CAAC;IAC1F,CAAC;IAED,eAAe;QACb,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  ApplePayPayment,\n  ApplePayCode,\n  ApplePayPaymentResponse,\n  ApplePayRequest,\n  ApplePaySessionPlugin,\n  AppleyPayToken,\n  ApplePayStatus,\n} from './definitions';\n\nclass AppleyPayError extends Error {\n  code: ApplePayCode = 'payment_reject';\n\n  constructor(message: string, code: ApplePayCode) {\n    super(message);\n    this.code = code;\n  }\n}\n\nexport class ApplePaySessionWeb extends WebPlugin implements ApplePaySessionPlugin {\n  getSession(request: ApplePayRequest): Promise<AppleyPayToken> {\n    console.log({ request });\n    throw new AppleyPayError('Apple Pay is not available on WEB', 'applepay_not_available');\n  }\n\n  initiatePayment<Body, Response>(paymentRequest: ApplePayPayment<Body>): Promise<ApplePayPaymentResponse<Response>> {\n    console.log({ paymentRequest });\n    throw new AppleyPayError('Appl Pay is not available on WEB', 'applepay_not_available');\n  }\n\n  completeSession(status: ApplePayStatus): Promise<void> {\n    console.log(status);\n    throw new AppleyPayError('Apple Pay is not available on WEB', 'applepay_not_available');\n  }\n\n  canMakePayments(): Promise<{ status: boolean }> {\n    return Promise.resolve({ status: false });\n  }\n}\n"]}